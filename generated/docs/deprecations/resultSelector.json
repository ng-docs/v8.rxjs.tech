{"id":"deprecations/resultSelector","title":"ResultSelector(结果选择器)参数","contents":"\n<div class=\"content\">\n<h1 id=\"resultselector-parameter\" translation-result=\"on\">ResultSelector(结果选择器)参数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/resultSelector#resultselector-parameter\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">ResultSelector Parameter<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/resultSelector#resultselector-parameter\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">某些操作符支持一个 resultSelector 参数作为该操作符结果的映射函数。使用 <code><a href=\"api/index/function/map\" class=\"code-anchor\">map</a></code> 操作符可以实现相同的行为，因此并不推荐使用此参数。</p><p translation-origin=\"off\">Some operator supported a resultSelector argument that acted as mapping function on the result of that operator. The same behavior can be reproduced with the <code><a href=\"api/index/function/map\" class=\"code-anchor\">map</a></code> operator, therefore this argument became deprecated.</p>\n\n<div class=\"alert is-important\">\n    <span>\n        This deprecation was introduced in RxJS 6.0 and will become breaking with RxJS 8.\n    </span>\n</div>\n<p translation-result=\"on\">出于两个原因，要事实性弃用这些参数：</p><p translation-origin=\"off\">There were two reasons for actually deprecating those parameters:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">它增加了每个操作符的捆绑包大小</p><p translation-origin=\"off\">It increases the bundle size of every operator</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在某些情况下，一些值必须保留在内存中，从而导致一般性的内存压力</p><p translation-origin=\"off\">In some scenarios values had to be retained in memory causing a general memory pressure</p>\n\n</li>\n</ol>\n<h2 id=\"operators-affected-by-this-change\" translation-result=\"on\">受此变更影响的操作符<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/resultSelector#operators-affected-by-this-change\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Operators affected by this Change<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/resultSelector#operators-affected-by-this-change\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"/api/operators/concatMap\">concatMap(串联映射)</a></p><p translation-origin=\"off\"><a href=\"/api/operators/concatMap\">concatMap</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"/api/operators/concatMapTo\">concatMapTo(串联映射为)</a></p><p translation-origin=\"off\"><a href=\"/api/operators/concatMapTo\">concatMapTo</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"/api/operators/exhaustMap\">exhaustMap(疲劳映射)</a></p><p translation-origin=\"off\"><a href=\"/api/operators/exhaustMap\">exhaustMap</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"/api/operators/mergeMap\">mergeMap(合并映射)</a></p><p translation-origin=\"off\"><a href=\"/api/operators/mergeMap\">mergeMap</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"/api/operators/mergeMapTo\">mergeMapTo(合并映射为)</a></p><p translation-origin=\"off\"><a href=\"/api/operators/mergeMapTo\">mergeMapTo</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"/api/operators/switchMap\">switchMap(切换映射)</a></p><p translation-origin=\"off\"><a href=\"/api/operators/switchMap\">switchMap</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"/api/operators/swithMapTo\">swithMapTo(切换映射为)</a></p><p translation-origin=\"off\"><a href=\"/api/operators/swithMapTo\">swithMapTo</a></p>\n\n</li>\n</ul>\n<h2 id=\"how-to-refactor\" translation-result=\"on\">如何重构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/resultSelector#how-to-refactor\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">How to Refactor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"deprecations/resultSelector#how-to-refactor\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你可以在内部 Observable 上利用 <a href=\"/api/operators/map\"><code>map</code></a> 操作符，而不再使用 <code>resultSelector</code> 参数：</p><p translation-origin=\"off\">Instead of using the <code>resultSelector</code> Argument, you can leverage the <a href=\"/api/operators/map\"><code>map</code></a> operator on the inner Observable:</p>\n\n<!-- prettier-ignore -->\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/switchMap\" class=\"code-anchor\">switchMap</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs';\n\n// deprecated\n<a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click').pipe(\n  <a href=\"api/index/function/switchMap\" class=\"code-anchor\">switchMap</a>((x) =&gt; <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000), (_, x) =&gt; x + 1)\n);\n// suggested change\n<a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click').pipe(\n  <a href=\"api/index/function/switchMap\" class=\"code-anchor\">switchMap</a>((x) =&gt; <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000).pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>((x) =&gt; x + 1)))\n);\n</code-example>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/operators/concatMap\n - /api/operators/concatMapTo\n - /api/operators/exhaustMap\n - /api/operators/map\n - /api/operators/mergeMap\n - /api/operators/mergeMapTo\n - /api/operators/switchMap\n - /api/operators/swithMapTo\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/map\n - api/index/function/switchMap\n - deprecations/resultSelector#how-to-refactor\n - deprecations/resultSelector#operators-affected-by-this-change\n - deprecations/resultSelector#resultselector-parameter\n - deprecations/resultSelector#resultselector结果选择器参数\n - deprecations/resultSelector#受此变更影响的操作符\n - deprecations/resultSelector#如何重构\n-->"}