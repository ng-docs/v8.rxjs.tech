{"id":"api/index/function/onErrorResumeNext","title":"onErrorResumeNext","contents":"\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/onErrorResumeNext.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L121\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/observable/onErrorResumeNext.ts#L11-L121\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/onErrorResumeNext\", \"name\": \"onErrorResumeNext\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"onerrorresumenext\">onErrorResumeNext<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/onErrorResumeNext#onerrorresumenext\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">当任何提供的 Observable 发送完成或错误通知时，它会立即订阅下一个传入的 Observable。</p><p translation-origin=\"off\">When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\nthat was passed.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">无论如何都要执行这一系列 Observables，即使这意味着掩盖错误。</span></p><p translation-origin=\"off\"><span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/onErrorResumeNext.png\" width=\"100%\" alt=\"onErrorResumeNext marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> 将按顺序订阅它提供的每个可观察源。如果它订阅的源出错或完成，它将移动到下一个源而不会发出错误。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> will subscribe to each observable source it is provided, in order.\nIf the source it's subscribed to emits an error or completes, it will move to the next source\nwithout error.</p>\n\n<p translation-result=\"on\">如果 <code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> 没有提供任何参数，或者提供了一个空数组，它将返回 <a href=\"api/index/const/EMPTY\"><code>EMPTY</code></a>。</p><p translation-origin=\"off\">If <code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> is provided no arguments, or a single, empty array, it will return <a href=\"api/index/const/EMPTY\"><code>EMPTY</code></a>.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> 基本相当于 <a href=\"api/index/function/concat\"><code>concat</code></a>，但即使它的一个源发生了错误，它也会继续。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> is basically <a href=\"api/index/function/concat\"><code>concat</code></a>, only it will continue, even if one of its\nsources emits an error.</p>\n\n<p translation-result=\"on\">请注意，无法通过 <code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> 的结果处理来源中抛出的任何错误。如果你想处理任何给定来源中抛出的错误，你可以在将它们传给 <code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code> 之前总是对其先使用 <a href=\"api/index/function/catchError\"><code>catchError</code></a> 操作符。</p><p translation-origin=\"off\">Note that there is no way to handle any errors thrown by sources via the result of\n<code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code>. If you want to handle errors thrown in any given source, you can\nalways use the <a href=\"api/index/function/catchError\"><code>catchError</code></a> operator on them before passing them into <code><a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a></code>.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/onErrorResumeNext#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/onErrorResumeNext#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">map 失败后订阅下一个 Observable</p><p translation-origin=\"off\">Subscribe to the next Observable after map fails</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a> } from 'rxjs';\n\n<a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a>(\n  <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3, 0).pipe(\n    <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(x =&gt; {\n      if (x === 0) {\n        throw Error();\n      }\n      return 10 / x;\n    })\n  ),\n  <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3)\n)\n.subscribe({\n  next: value =&gt; console.log(value),\n  error: err =&gt; console.log(err),     // Will never be called.\n  complete: () =&gt; console.log('done')\n});\n\n// Logs:\n// 10\n// 5\n// 3.3333333333333335\n// 1\n// 2\n// 3\n// 'done'\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/onErrorResumeNext\" class=\"code-anchor\">onErrorResumeNext</a>&lt;A extends readonly unknown[]&gt;(...sources: [...ObservableInputTuple&lt;A&gt;] | [[...ObservableInputTuple&lt;A&gt;]]): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&lt;A[number]&gt;</code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"sources\"></a>\n        <code>sources</code>\n      </td>\n      <td class=\"param-type\"><code>[...ObservableInputTuple&lt;A&gt;] | [[...ObservableInputTuple&lt;A&gt;]]</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">直接或作为数组传入的 Observables（或任何<em> Observable</em>类似物）。</p><p translation-origin=\"off\">        Observables (or anything that <em>is</em> observable) passed either directly or as an array.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p translation-result=\"on\">一个 Observable。它会一个接一个地连接所有来源，忽略所有错误，任何错误都会导致它移动到下一个来源。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&lt;A[number]&gt;</code>: An Observable that concatenates all sources, one after the other,\nignoring all errors, such that any error causes it to move on to the next source.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section ng-should-translate=\"\" class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/onErrorResumeNext#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/concat\"><code>concat</code></a>\n</li>\n    <li><a href=\"api/index/function/catchError\"><code>catchError</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/catchError\n - api/index/function/onErrorResumeNextWith\n - api/operators/catchError\n - api/operators/onErrorResumeNext\n - guide/importing\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/const/EMPTY\n - api/index/function/catchError\n - api/index/function/concat\n - api/index/function/map\n - api/index/function/of\n - api/index/function/onErrorResumeNext#example\n - api/index/function/onErrorResumeNext#onerrorresumenext\n - api/index/function/onErrorResumeNext#see-also\n - api/index/function/onErrorResumeNext#例子\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/onErrorResumeNext.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L121\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/observable/onErrorResumeNext.ts#L11-L121\n-->"}