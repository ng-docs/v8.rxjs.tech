{"id":"api/index/function/expand","title":"expand","contents":"\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/expand.ts?message=docs(index)%3A%20describe%20your%20change...#L24-L121\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/expand.ts#L24-L121\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/expand\", \"name\": \"expand\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"expand\">expand<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/expand#expand\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">递归地将每个源值投影为一个 Observable，该 Observable 会被合并到输出 Observable 中。</p><p translation-origin=\"off\">Recursively projects each source value to an Observable which is merged in\nthe output Observable.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">它类似于 <a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>，但会将投影函数应用于每个源值以及每个输出值。它是递归的。</span></p><p translation-origin=\"off\"><span class=\"informal\">It's similar to <a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>, but applies the\nprojection function to every source value as well as every output value.\nIt's recursive.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/expand.png\" width=\"100%\" alt=\"expand marble diagram\"></p>\n<p translation-result=\"on\">返回一个 Observable，该 Observable 将针对源 Observable 发出的每个条目调用某个函数，该函数会返回一个 Observable，然后合并这些结果 Observable，并发送其所有条目。<em>expand</em> 会在输出 Observable 上重新发送每个源的每个值。然后，对每个输出值调用 <code>project</code> 函数，该函数会返回一个内部 Observable，并将其合并到输出 Observable 上。此投影产生的那些输出值也会再传给 <code>project</code> 函数以产生新的输出值。这就是 <em>expand</em> 的递归式行为。</p><p translation-origin=\"off\">Returns an Observable that emits items based on applying a function that you\nsupply to each item emitted by the source Observable, where that function\nreturns an Observable, and then merging those resulting Observables and\nemitting the results of this merger. <em>Expand</em> will re-emit on the output\nObservable every source value. Then, each output value is given to the\n<code>project</code> function which returns an inner Observable to be merged on the\noutput Observable. Those output values resulting from the projection are also\ngiven to the <code>project</code> function to produce new output values. This is how\n<em>expand</em> behaves recursively.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/expand#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/expand#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">每次点击时开始发送 2 的幂，最多 10 个</p><p translation-origin=\"off\">Start emitting the powers of two on every click, at most 10 of them</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/expand\" class=\"code-anchor\">expand</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/delay\" class=\"code-anchor\">delay</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> } from 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst powersOfTwo = clicks.pipe(\n  <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() =&gt; 1),\n  <a href=\"api/index/function/expand\" class=\"code-anchor\">expand</a>(x =&gt; <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(2 * x).pipe(<a href=\"api/index/function/delay\" class=\"code-anchor\">delay</a>(1000))),\n  <a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(10)\n);\npowersOfTwo.subscribe(x =&gt; console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/expand\" class=\"code-anchor\">expand</a>&lt;T, O extends <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&lt;unknown&gt;&gt;(project: (value: T, index: number) =&gt; O, concurrent: number = Infinity, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&lt;T, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&lt;O&gt;&gt;</code-example>\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"project\"></a>\n        <code>project</code>\n      </td>\n      <td class=\"param-type\"><code>(value: T, index: number) =&gt; O</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">一个函数，当应用于由源 Observable 或输出 Observable 发送的条目时，会返回一个 Observable。</p><p translation-origin=\"off\">        A function\nthat, when applied to an item emitted by the source or the output Observable,\nreturns an Observable.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"concurrent\"></a>\n        <code>concurrent</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code>Infinity</code>。</p>\n<p translation-result=\"on\">要同时订阅的输入 Observable 的最大数量。</p><p translation-origin=\"off\">        Maximum number of input\nObservables being subscribed to concurrently.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"scheduler\"></a>\n        <code>scheduler</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code></td>\n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code>undefined</code>。</p>\n<p translation-result=\"on\">一个 <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a>，用于订阅每个投影出的内部 Observable。</p><p translation-origin=\"off\">        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for subscribing to\neach projected inner Observable.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p translation-result=\"on\">一个函数，它返回一个发送源值的 Observable 并针对输出 Observable 上发送的每个值调用投影函数，并合并从此转换来的 Observable 的结果。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&lt;T, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&lt;O&gt;&gt;</code>: A function that returns an Observable that emits the source values\nand also result of applying the projection function to each value emitted on\nthe output Observable and merging the results of the Observables obtained\nfrom this transformation.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section ng-should-translate=\"\" class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/expand#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>\n</li>\n    <li><a href=\"api/index/function/mergeScan\"><code>mergeScan</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/reduce\n - api/index/function/scan\n - api/index/function/timeout\n - api/operators/expand\n - api/operators/timeout\n - guide/scheduler\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/delay\n - api/index/function/expand#example\n - api/index/function/expand#expand\n - api/index/function/expand#see-also\n - api/index/function/expand#例子\n - api/index/function/fromEvent\n - api/index/function/map\n - api/index/function/mergeMap\n - api/index/function/mergeScan\n - api/index/function/of\n - api/index/function/take\n - api/index/interface/OperatorFunction\n - api/index/interface/SchedulerLike\n - api/index/type-alias/ObservableInput\n - api/index/type-alias/ObservedValueOf\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/expand.ts?message=docs(index)%3A%20describe%20your%20change...#L24-L121\n - https://github.com/reactivex/rxjs/tree/8.0.0-alpha.7/src/internal/operators/expand.ts#L24-L121\n-->"}